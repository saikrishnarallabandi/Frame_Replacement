LANG=C; export LANG

if [ ! "$ESTDIR" ]
then
   echo "environment variable ESTDIR is unset"
   echo "set it to your local speech tools directory e.g."
   echo '   bash$ export ESTDIR=/home/awb/projects/speech_tools/'
   echo or
   echo '   csh% setenv ESTDIR /home/awb/projects/speech_tools/'
   exit 1
fi

if [ ! "$FESTVOXDIR" ]
then
   echo "environment variable FESTVOXDIR is unset"
   echo "set it to your local festvox directory e.g."
   echo '   bash$ export FESTVOXDIR=/home/awb/projects/festvox/'
   echo or
   echo '   csh% setenv FESTVOXDIR /home/awb/projects/festvox/'
   exit 1
fi

if [ "$SIODHEAPSIZE" = "" ]
then
   SIODHEAPSIZE=20000000
   export SIODHEAPSIZE
fi
HEAPSIZE=$SIODHEAPSIZE

if [ "$CLUSTERGENDIR" = "" ]
then
    export CLUSTERGENDIR=$FESTVOXDIR/src/clustergen
fi



if [ "$1" = "kdtree" ]
then
  #### We can project using any other methods as well. I am using KDTree datastructure as it seemed to be performing a decent job at a good pace. But please note that I am wrong. 
  
 
   ##### Make a copy
   if [ ! -d f0_otherspeaker ]
   then
     mkdir mcep_deltas_otherspeaker
     mkdir mcep_deltas_ascii
     mkdir f0_otherspeaker
     mkdir v_otherspeaker
     mkdir str_otherspeaker
     mkdir mcep_deltas_replaced_ascii
   fi 

    PROMPTFILE="etc/txt.done.data"
    cat $PROMPTFILE | awk '{print $2}' | while read i
    do
      fname=$i
      echo $fname    
      ch_track -s 0.005 mcep_deltas/$fname.mcep -otype ascii -o mcep_deltas_ascii/$fname
      #cp f0/$fname.f0 f0_otherspeaker/$fname
      #cp v/$fname.v v_otherspeaker/$fname
      #cp str/$fname.str str_otherspeaker/$fname
    done 

  
   #### Prepare for projection
    cat mcep_deltas_ascii/tel* > telugu_frames_mcep
    #cat v/* > telugu_frames_v
    #cat str_otherspeaker/* > english_frames_str
    #cat f0/* > telugu_frames_f0
    #paste -d ' ' english_frames_v english_frames_mcep > english_frames
    cp telugu_frames_mcep telugu_frames
    python ./bin/replace_frames.py
   
    # Convert to binary
    for file in mcep_deltas_replaced_ascii/*.mcep ;
    do
      fname=$(basename "$file")
      echo $fname
      ch_track -s 0.005 mcep_deltas/$fname -otype est_binary -o mcep_deltas/$fname
    done

    # Map the f0 to mimic the original speaker characteristics
     



fi

